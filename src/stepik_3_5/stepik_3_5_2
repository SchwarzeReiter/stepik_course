/*
пишите класс AsciiCharSequence, реализующий компактное хранение последовательности ASCII-символов (их коды влезают в один байт) в массиве байт. По сравнению с классом String, хранящим каждый символ как char, AsciiCharSequence будет занимать в два раза меньше памяти.

Класс AsciiCharSequence должен:

реализовывать интерфейс java.lang.CharSequence;
иметь конструктор, принимающий массив байт;
определять методы length(), charAt(), subSequence() и toString()
Сигнатуры методов и ожидания по их поведению смотрите в описании интерфейса java.lang.CharSequence (JavaDoc или исходники).

В данном задании методам charAt() и subSequence() всегда будут подаваться корректные входные параметры, поэтому их проверкой и обработкой ошибок заниматься не нужно. Тем более мы еще не проходили исключения.
 */

public class AsciiCharSequence implements CharSequence {
    private byte[] Char;

    AsciiCharSequence(byte[] Char)
    {
        this.Char=Char.clone();
    }


    @Override
    public String toString() {
        return new String(Char);
    }

    @Override
    public int length() {
        return Char.length;
    }

    @Override
    public char charAt(int index) {
        return (char) Char[index];
    }

    @Override
    public CharSequence subSequence(int start, int end) {
        if(end<start){
            return null;
        }
        byte [] Buffbyte=new byte[end-start];

        for(int i=0;start<end;start++){
            Buffbyte[i]=Char[start];
            i++;
        }

        return new AsciiCharSequence(Buffbyte);
    }
}
